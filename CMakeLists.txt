CMAKE_MINIMUM_REQUIRED(VERSION 2.8.4)
PROJECT(TCP-Chat)


# Version
SET(TCP_CHAT_VERSION_MAJOR 0)
SET(TCP_CHAT_VERSION_MINOR 1)
SET(TCP_CHAT_VERSION "${TCP_CHAT_VERSION_MAJOR}.${TCP_CHAT_VERSION_MINOR}")


# Generate configure file
CONFIGURE_FILE(
	"${PROJECT_SOURCE_DIR}/Config.h.in"
	"${PROJECT_BINARY_DIR}/Config.h")


# Give name to various useful directories
SET(SRC "${PROJECT_SOURCE_DIR}/src")
SET(INC "${PROJECT_SOURCE_DIR}/include")

SET(SERVER_SRC "${SRC}/server")
SET(CLIENT_SRC "${SRC}/client")
SET(SERVER_INCLUDE "${INC}/server")
SET(CLIENT_INCLUDE "${INC}/client")


# Compiler options
IF (CMAKE_C_COMPILER_ID STREQUAL "GNU" OR
    CMAKE_C_COMPILER_ID STREQUAL "Clang")

    SET(CMAKE_C_FLAGS "--std=c99 ${CMAKE_C_FLAGS}")
    SET(CMAKE_C_FLAGS "-Wall -Wextra ${CMAKE_C_FLAGS}")
ENDIF()


# Server
FILE(GLOB SERVER_SRC_FILES "${SERVER_SRC}/*.c")
ADD_EXECUTABLE(server "${SERVER_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(server PUBLIC
    "${SERVER_INCLUDE};${INC};${PROJECT_BINARY_DIR}")


# Client
FILE(GLOB CLIENT_SRC_FILES "${CLIENT_SRC}/*.c")
ADD_EXECUTABLE(client "${CLIENT_SRC_FILES}")
TARGET_INCLUDE_DIRECTORIES(client PUBLIC
    "${CLIENT_INCLUDE};${INC};${PROJECT_BINARY_DIR}")

